#version 450 core

const int GRID_SIZE_X = 32*4;
const int GRID_SIZE_Y = 32*4;

float QuadBSpline(in float x) {
	x = abs(x);
	return (x < 0.5) ? 	step(0.0, x)*(0.75 - x*x) :
						step(x, 1.5)*0.5*(1.5 - x)*(1.5-x);
}

float QuadBSplineSlope(in float x) {
	float absx = abs(x);
	return (absx < 0.5) ? 	step(0.0, absx)*(-2*x) : 
						step(absx, 1.5)*(x - 1.5*x/absx);
}

float BSpline(in float x) {
	x = abs(x);
	return (x < 1.0) ? 	step(0.0, x)*(0.5*x*x*x - x*x + 2.0/3.0) :
						step(x, 2.0)*(2.0-x)*(2.0-x)*(2.0-x)/6.0;
}

float BSplineSlope(in float x) {
	float absx = abs(x);
	return (absx < 1.0) ? 	step(0.0, absx)*(1.5*x*absx-2*x) : 
						step(absx, 2.0)*(-x*absx/2 + 2*x - 2*x/absx);
}

void InBounds(inout int i, inout int j, out float inbounds) {
	float r1 = float(int((0 <= i) && (i < GRID_SIZE_X)));
	float r2 = float(int((0 <= j) && (j < GRID_SIZE_Y)));
	inbounds = r1 * r2;

	// also sets i and j to 0 if they are out of bounds, 
	// so they don't produce an error when accessing arrays
	i = (inbounds != 0.0) ? i : 0;
	j = (inbounds != 0.0) ? j : 0;
}