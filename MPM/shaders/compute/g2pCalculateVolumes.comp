#version 450 core

layout (local_size_x = 1024) in;

/*** HEADER ***/

void main() {
	uint pid = gl_GlobalInvocationID.x;
	uint N = points.length();
	if (pid >= N) { // hopefully this isn't a huge performance hit?
		return;
	}

	highp int node_i = int(floor(points[pid].x.x + 0.5));
	highp int node_j = int(floor(points[pid].x.y + 0.5));

	double massFromGrid = 0.f;
	for (int i = -2; i <= 2; ++i) {
		for (int j = -2; j <= 2; ++j) {

			int curNode_i = node_i + i;
			int curNode_j = node_j + j;
			double inb;
			InBounds(curNode_i, curNode_j, inb);

			dvec2 dpg = dvec2(curNode_i, curNode_j) - points[pid].x;
			double dx = -dpg.x;
			double dy = -dpg.y;
			double wpg = BSpline(dx) * BSpline(dy);

			massFromGrid += wpg * nodes[curNode_i][curNode_j].m * inb;
		}
	}

	// should never have 0 mass from grid unless negative masses exist
	points[pid].vol = (massFromGrid != 0.0) ? points[pid].m / massFromGrid : 0.0;

}