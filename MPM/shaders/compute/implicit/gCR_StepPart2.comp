#version 450 core

layout (local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

/*** HEADER ***/

void main() {
	uvec2 node = uvec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);

	// this is now calculating for k + 1 instead of k
	double nodeMass = nodes[node.x][node.y].m;
	nodes[node.x][node.y].Ark = (nodeMass == 0.0) ? vec2(0.0) : nodes[node.x][node.y].rk - dt*dt/nodeMass*IMPLICIT_RATIO*nodes[node.x][node.y].deltaForce;
	double beta = (nodes[node.x][node.y].rkArk == 0.0) ? 0.0 : dot(nodes[node.x][node.y].rk, nodes[node.x][node.y].Ark) / nodes[node.x][node.y].rkArk; // if 0, it means it converged
	nodes[node.x][node.y].pk = nodes[node.x][node.y].rk + beta*nodes[node.x][node.y].pk; // p_k+1 = r_k+1 + beta*p_k
	nodes[node.x][node.y].Apk = nodes[node.x][node.y].Ark + beta*nodes[node.x][node.y].Apk; // Ap_k+1 = Ar_k+1 + beta*Ap_k
}